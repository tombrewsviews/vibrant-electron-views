---
table: users

#############
# relations #
#############
array_relationships:
  - name: company_users
    using:
      foreign_key_constraint_on:
        column: user_id
        table: company_users
object_relationships:
  - name: professional
    using:
      manual_configuration:
        column_mapping:
          id: user_id
        remote_table: professionals
  - name: profile
    using:
      foreign_key_constraint_on: profile_id
  - name: patient
    using:
      manual_configuration:
        column_mapping:
          id: user_id
        remote_table: patients

###############
# permissions #
###############
# insert_permissions:
#   - role: company-admin
#     permission:
#       columns:
#         - cognito_id
#         - email
#         - has_accepted_terms
#         - profile_id
#   - role: member
#     permission:
#       check:
#         _exists:
#           _table: patients
#           _where:
#             id:
#               _eq: X-Hasura-Member-Id
#             is_configuration_up_to_member:
#               _eq: true
#       columns:
#         - email
#         - profile_id
#   - role: support
#     permission:
#       columns:
#         - can_be_support
#         - cognito_id
#         - email
#         - has_accepted_terms
#         - profile_id
# select_permissions:
#   - role: company-admin
#     permission: &select_permissions:company-admin:permission
#       allow_aggregations: true
#       columns:
#         - can_be_support
#         - cognito_id
#         - created_at
#         - email
#         - has_accepted_terms
#         - id
#         - profile_id
#         - updated_at
#       filter:
#         _and:
#           - &is-not-deleted
#             deleted_at:
#               _is_null: true
#           - _or:
#               # user of current user
#               - &my-user
#                 id:
#                   _eq: X-Hasura-User-Id
#               - company_users:
#                   # user is (super)admin of a company I'm an admin of
#                   &company-im-an-admin-of
#                   company_id:
#                     _in: X-Hasura-Companies
#               - company_users:
#                   # user is (super)admin of a company I'm a broker of
#                   &company-im-a-broker-of
#                   company:
#                     broker_id:
#                       _in: X-Hasura-Companies
#               # member is employee of company I'm an admin of
#               - member: *company-im-an-admin-of
#               # member is employee of a company I'm a broker of
#               - member: *company-im-a-broker-of
#               # TODO cleanup if provider role works
#               # # member goes to a location of a company I'm an admin of
#               # # this covers the professional too
#               # - member:
#               #     provider_location: *company-im-an-admin-of
#               # member is related to an employee of a company I'm an admin of
#               - member:
#                   main_member: *company-im-an-admin-of
#               # member is related to an employee of a company I'm a broker of
#               - member:
#                   main_member: *company-im-a-broker-of
#               # TODO cleanup if provider role works
#               # # related member goes to a location of a company I'm an admin of
#               # # this covers the professional too
#               # - member:
#               #     provider_location: *company-im-an-admin-of
#               # user is professional of a location I'm an admin of
#               # this covers the professional too
#               - professional:
#                   professional_locations:
#                     provider_location: *company-im-an-admin-of
#   - role: company-user
#     # copy the permissions model from the company-admin
#     permission: *select_permissions:company-admin:permission
#   - role: public
#     permission:
#       allow_aggregations: false
#       columns:
#         - id
#         - profile_id
#       filter:
#         _and:
#           - *is-not-deleted
#           # is a professional
#           - &is-professional
#             professional:
#               id:
#                 _is_null: false
#   - role: member
#     permission:
#       allow_aggregations: true
#       columns:
#         - cognito_id
#         - created_at
#         - email
#         - has_accepted_terms
#         - id
#         - profile_id
#         - updated_at
#       filter: &select_permissions:member:permission:filter
#         _and:
#           - *is-not-deleted
#           - _or:
#               - *my-user
#               - member:
#                   main_member_id:
#                     _eq: X-Hasura-Member-Id
#               - *is-professional
#   - role: support
#     permission:
#       columns:
#         - can_be_support
#         - has_accepted_terms
#         - cognito_id
#         - email
#         - created_at
#         - deleted_at
#         - updated_at
#         - id
#         - profile_id
#   - role: provider
#     permission: *select_permissions:company-admin:permission
#   - role: verifier
#     permission:
#       allow_aggregations: false
#       columns:
#         - email
#       filter: *is-not-deleted
#       limit: 1
# update_permissions:
#   - role: company-admin
#     permission:
#       columns:
#         - deleted_at
#         - email
#         - has_accepted_terms
#       filter:
#         _and:
#           - *is-not-deleted
#           - _or:
#               # user of current user
#               - *my-user
#               # user is (super)admin of a company I'm an admin of
#               - company_users: *company-im-an-admin-of
#               # user is (super)admin of a company I'm a broker of
#               - company_users: *company-im-a-broker-of
#               # member is employee of company I'm an admin of
#               - member: *company-im-an-admin-of
#               # member is employee of a company I'm a broker of
#               - member: *company-im-a-broker-of
#               # member is related to an employee of a company I'm an admin of
#               - member:
#                   main_member: *company-im-an-admin-of
#               # member is related to an employee of a company I'm a broker of
#               - member:
#                   main_member: *company-im-a-broker-of
#               # user is professional of a location I'm an admin of
#               # this covers the professional too
#               - professional:
#                   professional_locations:
#                     provider_location: *company-im-an-admin-of
#   - role: member
#     permission:
#       columns:
#         - email
#       filter: *select_permissions:member:permission:filter
#   - role: support
#     permission:
#       columns:
#         - can_be_support
#         - cognito_id
#         - deleted_at
#         - email
#         - has_accepted_terms
#         - profile_id

############
#  events  #
############
# event_triggers:
#   - definition:
#       enable_manual: true
#       update:
#         columns:
#           - email
#     headers:
#       - name: x-api-key
#         value_from_env: HASURA_EVENTS_KEY
#     name: sync-user-cognito
#     retry_conf:
#       interval_sec: 10
#       num_retries: 0
#       timeout_sec: 60
#     webhook_from_env: HASURA_EVENTS_URL
