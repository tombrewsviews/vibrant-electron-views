---
table: patients

#############
# relations #
#############
array_relationships:
  - name: responsible_persons
    using:
      foreign_key_constraint_on:
        column: patient_id
        table: responsible_persons
object_relationships:
  - name: accepted_agreement_by_user
    using:
      foreign_key_constraint_on: accepted_agreement_by_user_id
  - name: company
    using:
      foreign_key_constraint_on: company_id
  - name: created_by_user
    using:
      foreign_key_constraint_on: created_by_user_id
  - name: professional
    using:
      foreign_key_constraint_on: professional_id
  - name: provider_location
    using:
      foreign_key_constraint_on: provider_location_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  - name: main_member
    using:
      foreign_key_constraint_on: main_member_id
  - name: profile
    using:
      foreign_key_constraint_on: profile_id

###############
# permissions #
###############
# insert_permissions:
#   - role: company-admin
#     permission:
#       check:
#         _or:
#           - company_id:
#               _in: X-Hasura-Companies
#           - main_member:
#               company_id:
#                 _in: X-Hasura-Companies
#       columns: &insert_permissions:company-admin:permission:columns
#         - accepted_agreement_by_user_id
#         - accepted_agreement_on
#         - insurance_effective_date
#         - has_accepted_agreement
#         - is_configuration_up_to_member
#         - professional_id
#         - profile_id
#         - provider_location_id
#         - status
#         - user_id
#         - main_member_id
#         - relationship_to_main_member
#       set:
#         created_by_user_id: X-Hasura-User-Id
#   - role: member
#     comment: a member can insert related patients only if the configuration is up to them
#     permission:
#       check:
#         _exists:
#           _table: patients
#           _where:
#             id:
#               _eq: X-Hasura-Member-Id
#             is_configuration_up_to_member:
#               _eq: true
#       columns:
#         # TODO can we derive the effective_date and plan_id from the main member
#         - insurance_effective_date
#         - plan_id
#         - professional_id
#         - profile_id
#         - provider_location_id
#         - status
#         - user_id
#         - relationship_to_main_member
#       set:
#         accepted_agreement_by_user_id: X-Hasura-User-Id
#         accepted_agreement_on: now()
#         has_accepted_agreement: true
#         is_configuration_up_to_member: false
#         main_member_id: X-Hasura-Member-Id
#   - role: support
#     permission:
#       columns: *insert_permissions:company-admin:permission:columns
# select_permissions:
#   - role: company-admin
#     permission: &select_permissions:company-admin:permission
#       allow_aggregations: true
#       columns: &select_permissions:company-admin:permission:columns
#         - *insert_permissions:company-admin:permission:columns
#         - created_at
#         - created_by_user_id
#         - id
#         - insurance_expiry_date
#         - insurance_policy_id
#         - updated_at
#       # computed_fields:
#       #   &select_permissions:company-admin:permission:computed_fields
#       #   - expiry_date
#       #   - employer_name
#       #   - email
#       #   - phone_number
#       filter: &select_permissions:company-admin:permission:filter
#         _and:
#           - &is-not-deleted
#             deleted_at:
#               _is_null: true
#           - _or:
#               # member is employee of a company I'm an admin of
#               - &company-im-an-admin-of
#                 company_id:
#                   _in: X-Hasura-Companies
#               # member is employee is for a company I'm a broker of
#               - &company-im-a-broker-of
#                 company:
#                   broker_id:
#                     _in: X-Hasura-Companies
#               # main member is employee of a company I'm an admin of
#               - main_member: *company-im-an-admin-of
#               # main member is employee is for a company I'm a broker of
#               - main_member: *company-im-a-broker-of
#               # TODO cleanup if provider role works
#               # # member chose a provider of a company I'm an admin of
#               # - provider_location:
#               #     company_id:
#               #       _in: X-Hasura-Companies
#   - role: company-user
#     permission: *select_permissions:company-admin:permission
#   - role: member
#     permission:
#       allow_aggregations: true
#       columns: *select_permissions:company-admin:permission:columns
#       # computed_fields: *select_permissions:company-admin:permission:computed_fields
#       filter: &select_permissions:member:permission:filter
#         _and:
#           - *is-not-deleted
#           - _or:
#               - id:
#                   _eq: X-Hasura-Member-Id
#               - main_member_id:
#                   _eq: X-Hasura-Member-Id
#   - role: support
#     permission:
#       allow_aggregations: true
#       columns:
#         - *select_permissions:company-admin:permission:columns
#         - deleted_at
#       # computed_fields: *select_permissions:company-admin:permission:computed_fields
#   - role: verifier
#     permission:
#       allow_aggregations: false
#       columns:
#         - insurance_policy_id
#         - status
#         - insurance_effective_date
#         - relationship_to_main_member
#       # computed_fields: *select_permissions:company-admin:permission:computed_fields
#       filter: *is-not-deleted
#       limit: 1
#   - role: provider
#     permission:
#       allow_aggregations: false
#       columns:
#         - id
#         - company_id
#         - insurance_policy_id
#         - status
#         - insurance_effective_date
#         - created_at
#         - provider_location_id
#         - professional_id
#         - relationship_to_main_member
#         - main_member_id
#         - insurance_expiry_date
#       # computed_fields: *select_permissions:company-admin:permission:computed_fields
#       filter:
#         _and:
#           - *is-not-deleted
#           - _or:
#             # member chose a provider of a company I'm an admin of
#             - provider_location: *company-im-an-admin-of
#             # # is main member of a member that chose us
#             # - related_patients:
#             #     provider_location: *company-im-an-admin-of
# update_permissions:
#   - role: company-admin
#     permission:
#       columns: &update_permissions:company-admin:permission:columns
#         - *insert_permissions:company-admin:permission:columns
#         - deleted_at
#       filter:
#         _and:
#           - &is-not-deleted
#             deleted_at:
#               _is_null: true
#           - _or:
#               # member is employee of a company I'm an admin of
#               - *company-im-an-admin-of
#               # member is employee is for a company I'm a broker of
#               - *company-im-a-broker-of
#               # main member is employee of a company I'm an admin of
#               - main_member: *company-im-an-admin-of
#               # main member is employee is for a company I'm a broker of
#               - main_member: *company-im-a-broker-of
#   - role: member
#     permission:
#       columns:
#         - accepted_agreement_by_user_id
#         - accepted_agreement_on
#         - has_accepted_agreement
#         - plan_id
#         - professional_id
#         - provider_location_id
#         - status
#         - relationship_to_main_member
#       filter: *select_permissions:member:permission:filter
#   - role: support
#     permission:
#       columns: *update_permissions:company-admin:permission:columns

############
#  events  #
############
# event_triggers:
#   - definition:
#       enable_manual: false
#       insert:
#         columns: '*'
#     headers:
#       - name: x-api-key
#         value_from_env: HASURA_EVENTS_KEY
#     name: insert-member-policy-id
#     retry_conf:
#       interval_sec: 10
#       num_retries: 0
#       timeout_sec: 60
#     webhook_from_env: HASURA_EVENTS_URL
#   - definition:
#       enable_manual: true
#       insert:
#         columns: '*'
#       update:
#         columns:
#           - status
#     headers:
#       - name: x-api-key
#         value_from_env: HASURA_EVENTS_KEY
#     name: invite-member
#     retry_conf:
#       interval_sec: 10
#       num_retries: 0
#       timeout_sec: 60
#     webhook_from_env: HASURA_EVENTS_URL
#   - definition:
#       enable_manual: true
#       insert:
#         columns: '*'
#       update:
#         columns:
#           - user_id
#     headers:
#       - name: x-api-key
#         value_from_env: HASURA_EVENTS_KEY
#     name: sync-member-profile-to-user
#     retry_conf:
#       interval_sec: 10
#       num_retries: 0
#       timeout_sec: 60
#     webhook_from_env: HASURA_EVENTS_URL
#   - definition:
#       enable_manual: false
#       update:
#         columns:
#           - deleted_at
#     headers:
#       - name: x-api-key
#         value_from_env: HASURA_EVENTS_KEY
#     name: maybe-delete-invited-member-and-related-data
#     retry_conf:
#       interval_sec: 10
#       num_retries: 0
#       timeout_sec: 60
#     webhook_from_env: HASURA_EVENTS_URL

###################
# computed fieldsÂ #
###################
# computed_fields:
#   - name: expiry_date
#     table:
#       name: patients
#       schema: public
#     definition:
#       function:
#         name: patients_expiry_date
#         schema: public
#       table_argument: member
#   - name: employer_name
#     table:
#       name: patients
#       schema: public
#     definition:
#       function:
#         name: patients_employer_name
#         schema: public
#       table_argument: member
#   - name: email
#     table:
#       name: patients
#       schema: public
#     definition:
#       function:
#         name: patients_email
#         schema: public
#       table_argument: member
#   - name: phone_number
#     table:
#       name: patients
#       schema: public
#     definition:
#       function:
#         name: patients_phone_number
#         schema: public
#       table_argument: member
#   - name: addresses
#     table:
#       name: patients
#       schema: public
#     definition:
#       function:
#         name: patients_addresses
#         schema: public
#       table_argument: member
