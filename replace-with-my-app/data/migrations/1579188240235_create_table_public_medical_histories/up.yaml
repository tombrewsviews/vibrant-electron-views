- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"medical_histories\"(\"id\" uuid NOT NULL DEFAULT
      gen_random_uuid(), \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\"
      timestamptz NOT NULL DEFAULT now(), \"patient_id\" uuid NOT NULL, \"data\" jsonb
      NOT NULL, PRIMARY KEY (\"id\") );\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_medical_histories_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"medical_histories\"\nFOR EACH ROW\nEXECUTE PROCEDURE
      \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT ON TRIGGER \"set_public_medical_histories_updated_at\"
      ON \"public\".\"medical_histories\" \nIS 'trigger to set value of column \"updated_at\"
      to current timestamp on row update';\n"
  type: run_sql
- args:
    name: medical_histories
    schema: public
  type: add_existing_table_or_view
